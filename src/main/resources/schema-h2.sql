------------------------------------------------------------
-- H2 DEV SCHEMA (in-memory)
-- 핵심: FK 동작 동일화
--  - pack_product.product_id → product.id : ON DELETE CASCADE
--  - pack_product.pack_id    → pack.id    : ON DELETE CASCADE
--  - product.category_id     → category.id: ON DELETE SET NULL
--  - pack.category_id        → category.id: ON DELETE SET NULL
------------------------------------------------------------

-- 깨끗이 비우고 시작 (순서 중요: 자식 → 부모)
DROP TABLE IF EXISTS pack_product;
DROP TABLE IF EXISTS pack;
DROP TABLE IF EXISTS product;
DROP TABLE IF EXISTS category;
DROP TABLE IF EXISTS member;

------------------------------------------------------------
-- 1) 멤버
------------------------------------------------------------
CREATE TABLE member (
  user_id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email              VARCHAR(100) NOT NULL,
  password           VARCHAR(255),
  name               VARCHAR(50)  NOT NULL,
  provider           VARCHAR(20),
  provider_id        VARCHAR(100),
  profile_image_url  VARCHAR(500),
  is_active          BOOLEAN      NOT NULL DEFAULT TRUE,
  created_at         TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at         TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE UNIQUE INDEX uk_member_email ON member(email);
CREATE UNIQUE INDEX uk_member_provider_id ON member(provider, provider_id);
CREATE INDEX idx_member_provider   ON member(provider);
CREATE INDEX idx_member_is_active  ON member(is_active);

------------------------------------------------------------
-- 2) 카테고리
------------------------------------------------------------
CREATE TABLE category (
  id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name  VARCHAR(100) NOT NULL,
  src   VARCHAR(500)
);

CREATE UNIQUE INDEX uk_category_name ON category(name);

------------------------------------------------------------
-- 3) 상품
------------------------------------------------------------
CREATE TABLE product (
  id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name         VARCHAR(200) NOT NULL,
  link         VARCHAR(500),
  product_type VARCHAR(50),
  src          VARCHAR(500),
  cost         INT,
  like_count   INT NOT NULL DEFAULT 0,
  category_id  BIGINT
);

CREATE INDEX idx_product_name      ON product(name);
CREATE INDEX idx_product_category  ON product(category_id);
CREATE INDEX idx_product_like      ON product(like_count);

-- 제약 (체크)
ALTER TABLE product ADD CONSTRAINT chk_product_cost_nonneg  CHECK (cost IS NULL OR cost >= 0);
ALTER TABLE product ADD CONSTRAINT chk_product_like_nonneg  CHECK (like_count >= 0);

-- FK: product → category (SET NULL)
ALTER TABLE product
  ADD CONSTRAINT fk_product_category
  FOREIGN KEY (category_id)
  REFERENCES category(id)
  ON DELETE SET NULL
  ON UPDATE CASCADE;

------------------------------------------------------------
-- 4) 스타터팩
------------------------------------------------------------
CREATE TABLE pack (
  id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name             VARCHAR(100) NOT NULL,
  category_id      BIGINT,
  total_cost       INT,
  pack_like_count  INT NOT NULL DEFAULT 0,
  src              VARCHAR(500),
  description      CLOB
);

CREATE INDEX idx_pack_category     ON pack(category_id);
CREATE INDEX idx_pack_like         ON pack(pack_like_count);

ALTER TABLE pack ADD CONSTRAINT chk_pack_total_cost_nonneg CHECK (total_cost IS NULL OR total_cost >= 0);
ALTER TABLE pack ADD CONSTRAINT chk_pack_like_nonneg       CHECK (pack_like_count >= 0);

-- FK: pack → category (SET NULL)
ALTER TABLE pack
  ADD CONSTRAINT fk_pack_category
  FOREIGN KEY (category_id)
  REFERENCES category(id)
  ON DELETE SET NULL
  ON UPDATE CASCADE;

------------------------------------------------------------
-- 5) 매핑 테이블: pack_product (복합 PK)
------------------------------------------------------------
CREATE TABLE pack_product (
  pack_id    BIGINT NOT NULL,
  product_id BIGINT NOT NULL,
  PRIMARY KEY (pack_id, product_id)
);

CREATE INDEX idx_pp_product ON pack_product(product_id);

-- FK: pack_product → pack (CASCADE)
ALTER TABLE pack_product
  ADD CONSTRAINT fk_pp_pack
  FOREIGN KEY (pack_id)
  REFERENCES pack(id)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

-- FK: pack_product → product (CASCADE)
ALTER TABLE pack_product
  ADD CONSTRAINT fk_pp_product
  FOREIGN KEY (product_id)
  REFERENCES product(id)
  ON DELETE CASCADE
  ON UPDATE CASCADE;
