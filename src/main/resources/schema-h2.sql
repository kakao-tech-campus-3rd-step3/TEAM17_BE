------------------------------------------------------------
-- H2 DEV SCHEMA (in-memory)
-- 핵심: FK 동작 동일화
--  - pack_product.product_id → product.id : ON DELETE CASCADE
--  - pack_product.pack_id    → pack.id    : ON DELETE CASCADE
--  - product.category_id     → category.id: ON DELETE SET NULL
--  - pack.category_id        → category.id: ON DELETE SET NULL
------------------------------------------------------------

-- 깨끗이 비우고 시작 (순서 중요: 자식 → 부모)
DROP TABLE IF EXISTS feed_like;
DROP TABLE IF EXISTS feed_product;
DROP TABLE IF EXISTS pack_product;
DROP TABLE IF EXISTS feed;
DROP TABLE IF EXISTS pack;
DROP TABLE IF EXISTS product;
DROP TABLE IF EXISTS category;
DROP TABLE IF EXISTS link_policy;
DROP TABLE IF EXISTS member;

------------------------------------------------------------
-- 1) 멤버
------------------------------------------------------------
CREATE TABLE member (
  user_id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email              VARCHAR(100) NOT NULL,
  password           VARCHAR(255),
  name               VARCHAR(50)  NOT NULL,
  provider           VARCHAR(20),
  provider_id        VARCHAR(100),
  profile_image_url  VARCHAR(500),
  is_active          BOOLEAN      NOT NULL DEFAULT TRUE,
  role               VARCHAR(20)  NOT NULL DEFAULT 'USER',
  created_at         TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at         TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT chk_member_role CHECK (role IN ('USER','ADMIN')) -- (선택) Enum 보호
);

CREATE UNIQUE INDEX uk_member_email       ON member(email);
CREATE UNIQUE INDEX uk_member_provider_id ON member(provider, provider_id);
CREATE INDEX        idx_member_provider   ON member(provider);
CREATE INDEX        idx_member_is_active  ON member(is_active);

------------------------------------------------------------
-- 2) 카테고리
------------------------------------------------------------
CREATE TABLE category (
  id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name  VARCHAR(100) NOT NULL,
  src   VARCHAR(500)
);

CREATE UNIQUE INDEX uk_category_name ON category(name);

------------------------------------------------------------
-- 3) 상품
------------------------------------------------------------
CREATE TABLE product (
  id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name         VARCHAR(200) NOT NULL,
  link         VARCHAR(500),
  product_type VARCHAR(50),
  src          VARCHAR(500),
  cost         INT,
  like_count   INT NOT NULL DEFAULT 0,
  category_id  BIGINT
);

CREATE INDEX idx_product_name      ON product(name);
CREATE INDEX idx_product_category  ON product(category_id);
CREATE INDEX idx_product_like      ON product(like_count);

ALTER TABLE product ADD CONSTRAINT chk_product_cost_nonneg CHECK (cost IS NULL OR cost >= 0);
ALTER TABLE product ADD CONSTRAINT chk_product_like_nonneg CHECK (like_count >= 0);

ALTER TABLE product
  ADD CONSTRAINT fk_product_category
  FOREIGN KEY (category_id)
  REFERENCES category(id)
  ON DELETE SET NULL
  ON UPDATE CASCADE;

------------------------------------------------------------
-- 3) 링크 정책 (Blacklist)
------------------------------------------------------------
CREATE TABLE link_policy (
  id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  pattern     VARCHAR(500) NOT NULL,
  description VARCHAR(1000),
  created_at  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP
);

------------------------------------------------------------
-- 4) 스타터팩
------------------------------------------------------------
CREATE TABLE pack (
  id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name             VARCHAR(100) NOT NULL,
  category_id      BIGINT,
  total_cost       INT,
  pack_like_count  INT NOT NULL DEFAULT 0,
  src              VARCHAR(500),
  description      CLOB
);

CREATE INDEX idx_pack_category ON pack(category_id);
CREATE INDEX idx_pack_like     ON pack(pack_like_count);

ALTER TABLE pack ADD CONSTRAINT chk_pack_total_cost_nonneg CHECK (total_cost IS NULL OR total_cost >= 0);
ALTER TABLE pack ADD CONSTRAINT chk_pack_like_nonneg       CHECK (pack_like_count >= 0);

ALTER TABLE pack
  ADD CONSTRAINT fk_pack_category
  FOREIGN KEY (category_id)
  REFERENCES category(id)
  ON DELETE SET NULL
  ON UPDATE CASCADE;

------------------------------------------------------------
-- 5) 매핑 테이블: pack_product (복합 PK)
------------------------------------------------------------
CREATE TABLE pack_product (
  pack_id    BIGINT NOT NULL,
  product_id BIGINT NOT NULL,
  PRIMARY KEY (pack_id, product_id)
);

CREATE INDEX idx_pp_product ON pack_product(product_id);

ALTER TABLE pack_product
  ADD CONSTRAINT fk_pp_pack
  FOREIGN KEY (pack_id)
  REFERENCES pack(id)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

ALTER TABLE pack_product
  ADD CONSTRAINT fk_pp_product
  FOREIGN KEY (product_id)
  REFERENCES product(id)
  ON DELETE CASCADE
  ON UPDATE CASCADE;
------------------------------------------------------------
-- 6) 사용자 피드
------------------------------------------------------------
CREATE TABLE feed (
  id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id     BIGINT       NOT NULL,
  description CLOB,
  image_url   VARCHAR(500) NOT NULL,
  feed_type   VARCHAR(20)  NOT NULL,
  category_id BIGINT,
  like_count  BIGINT       NOT NULL DEFAULT 0,
  created_at  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- 인덱스 추가
CREATE INDEX idx_feed_user     ON feed(user_id);
CREATE INDEX idx_feed_category ON feed(category_id);

-- 제약 조건 추가
ALTER TABLE feed ADD CONSTRAINT chk_feed_type       CHECK (feed_type IN ('INFO', 'DAILY'));
ALTER TABLE feed ADD CONSTRAINT chk_feed_like_count CHECK (like_count >= 0);

-- 외래 키(FK) 추가
ALTER TABLE feed
    ADD CONSTRAINT fk_feed_user
        FOREIGN KEY (user_id)
            REFERENCES member(user_id)
            ON DELETE CASCADE
            ON UPDATE CASCADE;

ALTER TABLE feed
    ADD CONSTRAINT fk_feed_category
        FOREIGN KEY (category_id)
            REFERENCES category(id)
            ON DELETE SET NULL
            ON UPDATE CASCADE;


------------------------------------------------------------
-- 7) 피드-상품 연관 테이블
------------------------------------------------------------
CREATE TABLE feed_product (
  id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  feed_id     BIGINT NOT NULL,
  product_id  BIGINT NOT NULL,
  description CLOB
);

-- 유니크 및 인덱스 추가
CREATE UNIQUE INDEX uk_feed_product ON feed_product(feed_id, product_id);
CREATE INDEX idx_fp_product       ON feed_product(product_id);

-- 외래 키(FK) 추가
ALTER TABLE feed_product
    ADD CONSTRAINT fk_fp_feed
        FOREIGN KEY (feed_id)
            REFERENCES feed(id)
            ON DELETE CASCADE
            ON UPDATE CASCADE;

ALTER TABLE feed_product
    ADD CONSTRAINT fk_fp_product
        FOREIGN KEY (product_id)
            REFERENCES product(id)
            ON DELETE CASCADE
            ON UPDATE CASCADE;
------------------------------------------------------------
-- 8) 피드 좋아요
------------------------------------------------------------
CREATE TABLE feed_like (
   id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   feed_id     BIGINT    NOT NULL,
   member_id   BIGINT    NOT NULL,
   created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- 유니크 및 인덱스 추가
CREATE UNIQUE INDEX uk_feed_like_member ON feed_like(feed_id, member_id);
CREATE INDEX idx_fl_member             ON feed_like(member_id);

-- 외래 키(FK) 추가
ALTER TABLE feed_like
    ADD CONSTRAINT fk_fl_feed
        FOREIGN KEY (feed_id)
            REFERENCES feed(id)
            ON DELETE CASCADE
            ON UPDATE CASCADE;

ALTER TABLE feed_like
    ADD CONSTRAINT fk_fl_member
        FOREIGN KEY (member_id)
            REFERENCES member(user_id)
            ON DELETE CASCADE
            ON UPDATE CASCADE;